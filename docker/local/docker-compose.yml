version: '3.8'

networks:
  YOUR_APP_NAME_network:
    external: true
  bridge:
    driver: bridge

services:
  db:
    container_name: ${DATABASE_CONTAINER_NAME}
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - dbdata:/var/lib/postgresql/data:rw
    networks:
      - ${DOCKER_NETWORK_NAME}
      - bridge

  pgadmin:
    depends_on:
      db:
        condition: service_healthy
    container_name: ${PGADMIN_CONTAINER_NAME}
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    restart: always
    networks:
      - ${DOCKER_NETWORK_NAME}
      - bridge

  app:
    depends_on:
      db:
        condition: service_healthy
    container_name: ${APP_CONTAINER_NAME}
    build:
      context: ../..
      dockerfile: docker/global/Dockerfile
      target: ${DOCKERFILE_TARGET}
    env_file:
      - ../../.env
    volumes:
      - ../..:/var/www
    ports:
      - ${APP_PORT}:80
    networks:
      - ${DOCKER_NETWORK_NAME}
      - bridge

volumes:
  dbdata:

